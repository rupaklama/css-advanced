/* logo */
.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

/* search */
.search {
  flex: 0 0 40%;

  display: flex;
  justify-content: center;
  align-items: center;

  &__input {
    // note - Input element does not inherit font styles automatically
    font-family: inherit;
    font-size: inherit;
    // text color to be inherited
    color: inherit;

    padding: 0.7rem 2rem;
    background-color: var(--color-grey-light-2);
    border: none;
    border-radius: 100px;
    width: 90%;

    // element on the right to be inside of it
    margin-right: -3.5rem;

    transition: all 0.2s;

    &:focus {
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }

    // note - replacing input placeholder to modify styles
    &::-webkit-input-placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  // button bg color becomes same as input
  &__input:focus + &__button {
    background-color: var(--color-grey-light-3);
  }

  &__button {
    border: none;
    background-color: var(--color-grey-light-2);
    transition: transform 0.1s;

    &:focus {
      outline: none;
    }

    &:active {
      transform: translateY(2px);
    }
  }

  &__icon {
    // set width & height to format icon
    width: 2rem;
    height: 2rem;

    // changing color of sprite svg image
    fill: var(--color-grey-dark-3);

    cursor: pointer;
  }
}

/* user navigation */
.user-nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  align-self: stretch;

  // direct children
  & > * {
    padding: 0 2rem;
    height: 100%;
    cursor: pointer;
  }

  & > *:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    display: flex;
    justify-content: center;
    align-items: center;

    position: relative;
  }

  &__icon {
    width: 2.25rem;
    height: 2.25rem;

    fill: var(--color-grey-dark-2);
  }

  &__notification {
    font-size: 0.8rem;
    height: 1.75rem;
    width: 1.75rem;

    // note - using 'px' to get perfect circle when having issues with '50%'
    border-radius: 100px;

    background-color: var(--color-primary);
    color: #fff;

    position: absolute;
    top: 1.5rem;
    right: 1.1rem;

    // note - flexbox can also be use to center any elements
    // not just child elements but texts as well inside of an element
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__user {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }
}

/* Side Navigation */
.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  &__item {
    position: relative;

    &:not(:last-child) {
      margin-bottom: 0.5rem;
    }
  }

  &__item::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;

    height: 100%;
    width: 3px;
    background-color: var(--color-primary);

    // starts out in the middle due to default transform-origin: center;
    // and grows outside of Y direction
    transform: scaleY(0);
    // transform-origin: center; note - this is applied by default

    // channiing mulitple transtions or effects
    transition: transform 0.2s,
      // first above transform occurs & we wait or delay .2s for width effect
      width 0.4s 0.2s,
      // at last
      background-color 0.1s;
  }

  // select pseudo element & visible on hover
  &__item:hover::before,
  &__item--active::before {
    transform: scaleY(1); // 100%
    width: 100%;
  }

  // on click
  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    display: block;
    padding: 1.5rem 3rem;

    // note - if z-index isn't working, specify positioning
    position: relative;
    z-index: 10;

    display: flex;
    align-items: center;
  }

  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;

    // color of current element or the parent, works like inherit
    fill: currentColor;
  }
}

/* Side Legal Text */
.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;
}

/* Gallery */
.gallery {
  display: flex;

  // note - we always want flexible images in responsive design
  // so always need to defined Width & Heights in percentage so the image stays fluid
  &__photo {
    width: 100%;

    // note - the image should always display as a Block or Inline Block because to avoid having
    // like small white spaces underneath an image which happens as we leave it as Inline Element
    display: block;
  }
}

/* Hotel Overview */
.overview {
  display: flex;
  // justify-content: space-around;
  align-items: center;

  border-bottom: var(--line);

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;

    padding: 1.5rem 3rem;
    cursor: pointer;
  }

  &__stars {
    // flex: 1;
    // note - using 'margin auto' with flexbox to not to take all available space like with above
    // Take space only needed for Content only, very powerful trick
    margin-right: auto;

    // note - SVG elements behave like an Inline Element creating white-space at the bottom
    // To remove it set line-height & font-size to 0 but
    // simple solution is to set parent element to flex box
    display: flex;

    cursor: pointer;
  }

  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location {
    font-size: 1.2rem;
    display: flex;
    align-items: center;
  }

  &__icon-location {
    margin-right: 0.5rem;
  }

  &__rating {
    background-color: var(--color-primary);
    color: #fff;
    margin-left: 3rem;
    padding: 0 2.25rem;
    cursor: pointer;

    align-self: stretch;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }

  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
    margin-bottom: -3px;
  }

  &__rating-count {
    font-size: 0.8rem;
    text-transform: uppercase;
  }
}

/* Button Inline */
.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit;
  cursor: pointer;
  border-bottom: 1px solid currentColor;
  padding-bottom: 2px;
  display: inline-block;
  background-color: transparent;
  transition: all 0.2s;

  & span {
    margin-left: 3px;
    transition: margin-left 0.2s;
  }

  &:hover,
  &:focus {
    color: var(--color-grey-dark-1);
    outline: none;
    animation: pulstate 1s infinite;

    span {
      margin-left: 8px;
    }
  }
}

@keyframes pulstate {
  0% {
    transform: scale(1);
    box-shadow: none;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 1 1rem 4rem rgba(0, 0, 0, 0.25);
  }

  100% {
    transform: scale(1);
    box-shadow: none;
  }
}

/* Paragraph */
.paragraph:not(:last-of-type) {
  // :last-of-type - to select last 'p' element
  margin-bottom: 2rem;
}

/* List */
.list {
  list-style: none;
  margin: 3rem 0;
  padding: 3rem 0;
  border-top: var(--line);
  border-bottom: var(--line);

  display: flex;
  // note - using flex-wrap to build a multi-column list
  flex-wrap: wrap;

  &__item {
    flex: 0 0 50%;
    margin-bottom: 0.7rem;
  }

  // note - using SVG in css
  &__item::before {
    content: "";
    display: inline-block;
    height: 1rem;
    width: 1rem;
    margin-right: 0.7rem;

    // note - can't color svg icon
    // background-image: url(../img/chevron-thin-right.svg);
    // background-size: cover;

    // newer browser - CSS Masks to color SVG icons
    // CSS Mask defines an area where we can look through the element
    // and see what is behind that element.
    background-color: var(--color-primary);
    // note - this makes an icon transparent to its background
    -webkit-mask-image: url(../img/chevron-thin-right.svg);
    mask-image: url(../img/chevron-thin-right.svg);

    // similar to background-size: cover;
    -webkit-mask-size: cover;
    mask-size: cover;
  }
}

/* Recommend */
.recommend {
  font-size: 1.3rem;
  color: var(--color-grey-dark-3);

  display: flex;
  align-items: center;

  &__count {
    margin-right: auto;
  }

  &__friends {
  }

  &__photo {
    // default value for image to be exact same size
    box-sizing: content-box;

    width: 4rem;
    height: 4rem;
    border-radius: 50%;
    border: 3px solid #fff;

    &:not(:last-child) {
      margin-right: -1.5rem;
    }
  }
}

/* Review */
.review {
  background-color: #fff;
  box-shadow: var(--shadow-light);
  padding: 3rem;
  margin-bottom: 3.5rem;

  position: relative;
  overflow: hidden;

  &__text {
    margin-bottom: 2rem;
    z-index: 10;
    position: relative;
  }

  &__user {
    display: flex;
    align-items: center;
  }

  &__photo {
    width: 4.5rem;
    height: 4.5rem;
    border-radius: 50%;

    margin-right: 1.5rem;
  }

  &__user-box {
    margin-right: auto;
  }

  &__user-name {
    font-size: 1.1rem;
    font-weight: 600;
    text-transform: uppercase;
    margin-bottom: 0.4rem;
  }

  &__user-date {
    font-size: 1rem;
    color: var(--color-grey-dark-3);
  }

  &__rating {
    color: var(--color-primary);
    font-size: 2.2rem;
    font-weight: 300;
  }

  &::before {
    // note - In css we use ISOnum for html entity
    content: "\201C";

    position: absolute;
    top: -2.7rem;
    left: -1rem;
    line-height: 1;

    font-size: 20rem;
    color: var(--color-grey-light-2);
    font-family: sans-serif;
    z-index: 1;
  }
}
