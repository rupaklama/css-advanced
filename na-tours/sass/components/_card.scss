.card {
  /* The perspective property is used to give a 3D-positioned element some perspective.
      The perspective property defines how far the object is away from the user. 
      So, a lower value will result in a more intensive 3D effect than a higher value.
      
      When defining the perspective property for an element, 
      it is the CHILD elements that get the perspective view, NOT the element itself.

      Note - This need to define in the Parent Element
  */

  // huge value for less 3D effect to bring closer to user
  perspective: 150rem;
  // to work in firefox browser as well
  -moz-perspective: 150rem;

  position: relative;

  // note - since the elements are positioned absolute, the parent looses its height
  // parent height to be same as childrens
  height: 52rem;

  &__side {
    height: 52rem;
    cursor: pointer;

    transition: all 0.5s ease;

    position: absolute;
    top: 0;
    left: 0;
    width: 100%;

    // to hide back part of the element
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;

    border-radius: 3px;
    overflow: hidden;
    box-shadow: 0 1.5rem 4rem rgba($color-black, 0.15);

    &--front {
      background-color: $color-white;
    }

    &--back {
      // note - before hovering, the back side is already flipped
      transform: rotateY(180deg);

      &-1 {
        background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark);
      }

      &-2 {
        background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark);
      }

      &-3 {
        background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark);
      }
    }
  }

  &:hover &__side--front {
    // negative value is to flip from the left side
    transform: rotateY(-180deg);
  }

  // note - the back side is already 180 after flip, flipping to the original position
  &:hover &__side--back {
    transform: rotateY(0);
  }

  &__picture {
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center center;

    // to support in all browsers
    // note - webkit prefix needs to be on top
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);

    height: 23rem;
    // background-blend-mode CSS property sets how an element's background images
    // should blend with each other and with the element's background color
    background-blend-mode: screen; // default effect

    &--1 {
      background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark),
        url(../img/nat-5.jpg);
    }

    &--2 {
      background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark),
        url(../img/nat-6.jpg);
    }

    &--3 {
      background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark),
        url(../img/nat-7.jpg);
    }
  }

  &__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    text-align: right;

    color: red;

    position: absolute;
    top: 12rem;
    right: 2rem;
  }

  &__heading-span {
    padding: 1rem 1.5rem;

    // box-decoration-break CSS property specifies how an element's fragments
    // should be rendered when broken across multiple lines, columns, or pages
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;

    &--1 {
      /* Adding Gradient going from first color to second one & start from left to right bottom side */
      background-image: linear-gradient(
        to right bottom,
        rgba($color-secondary-light, 0.85),
        rgba($color-secondary-dark, 0.85)
      );
    }

    &--2 {
      background-image: linear-gradient(
        to right bottom,
        rgba($color-primary-light, 0.85),
        rgba($color-primary-dark, 0.85)
      );
    }

    &--3 {
      background-image: linear-gradient(
        to right bottom,
        rgba($color-tertiary-light, 0.85),
        rgba($color-tertiary-dark, 0.85)
      );
    }
  }

  &__details {
    padding: 3rem;

    ul {
      list-style: none;
      width: 80%;
      margin: 0 auto;

      li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem;

        &:not(:last-child) {
          border-bottom: 1px solid $color-grey-light-2;
        }
      }
    }
  }

  &__cta {
    position: absolute;
    top: 50%;
    left: 50%;

    /* moving an element - relative to the Element itself to be at the center */
    transform: translate(-50%, -50%);

    width: 90%;
    text-align: center;
  }

  &__price-box {
    text-align: center;
    margin-bottom: 8rem;
    color: $color-white;
  }

  &__price-only {
    font-size: 1.4rem;
    text-transform: uppercase;
  }

  &__price-value {
    font-size: 6rem;
    font-weight: 100;
  }

  //@include respond(tab-port) {
  // only when we have screen less than 56.25em or touch device
  @media only screen and (max-width: 56.25em), only screen and (hover: none) {
    height: auto;
    border-radius: 3px;
    background-color: $color-white;
    box-shadow: 0 1.5rem 4rem rgba($color-black, 0.15);

    &__side {
      height: auto;
      position: relative;
      box-shadow: none;

      &--back {
        transform: rotateY(0);
        clip-path: polygon(0 15%, 100% 0, 100% 100%, 0% 100%);
      }
    }

    &:hover &__side--front {
      transform: rotateY(0);
    }

    &__details {
      padding: 1rem 3rem;
    }

    // FRONT SIDE STYLING
    &__cta {
      position: relative;
      top: 0%;
      left: 0;
      transform: translate(0);
      width: 100%;
      padding: 7rem 4rem 4rem 4rem;
    }

    &__price-box {
      margin-bottom: 3rem;
    }

    &__price-value {
      font-size: 4rem;
    }
  }
}
